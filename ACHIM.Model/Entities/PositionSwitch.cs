//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 28.03.2016 14:46:06
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace postgresModel
{

    /// <summary>
    /// There are no comments for postgresModel.PositionSwitch in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="postgresModel", Name="PositionSwitch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PositionSwitch : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PositionSwitch object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="number">Initial value of Number.</param>
        /// <param name="gPIO">Initial value of GPIO.</param>
        public static PositionSwitch CreatePositionSwitch(int id, int number, int gPIO)
        {
            PositionSwitch positionSwitch = new PositionSwitch();
            positionSwitch.Id = id;
            positionSwitch.Number = number;
            positionSwitch.GPIO = gPIO;
            return positionSwitch;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Number in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int Number
        {
            get
            {
                int value = _Number;
                OnGetNumber(ref value);
                return value;
            }
            set
            {
                if (_Number != value)
                {
                  OnNumberChanging(ref value);
                  ReportPropertyChanging("Number");
                  _Number = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Number");
                  OnNumberChanged();
              }
            }
        }
        private int _Number;
        partial void OnGetNumber(ref int value);
        partial void OnNumberChanging(ref int value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// There are no comments for GPIO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int GPIO
        {
            get
            {
                int value = _GPIO;
                OnGetGPIO(ref value);
                return value;
            }
            set
            {
                if (_GPIO != value)
                {
                  OnGPIOChanging(ref value);
                  ReportPropertyChanging("GPIO");
                  _GPIO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GPIO");
                  OnGPIOChanged();
              }
            }
        }
        private int _GPIO;
        partial void OnGetGPIO(ref int value);
        partial void OnGPIOChanging(ref int value);
        partial void OnGPIOChanged();

        #endregion

        #region Navigation Properties

        #endregion
    }

}
