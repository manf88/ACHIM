//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 28.03.2016 14:46:06
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("postgresModel", "Plant_Measurement", "Plant", RelationshipMultiplicity.One, typeof(postgresModel.Plant), "Measurements", RelationshipMultiplicity.Many, typeof(postgresModel.Measurement), true)]
[assembly: EdmRelationshipAttribute("postgresModel", "Plant_Irrigation", "Plant", RelationshipMultiplicity.One, typeof(postgresModel.Plant), "Irrigations", RelationshipMultiplicity.Many, typeof(postgresModel.Irrigation), true)]
[assembly: EdmRelationshipAttribute("postgresModel", "Plant_PositionSwitch", "Plant", RelationshipMultiplicity.One, typeof(postgresModel.Plant), "PositionSwitch", RelationshipMultiplicity.ZeroOrOne, typeof(postgresModel.PositionSwitch), true)]

#endregion

namespace postgresModel
{

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class postgresEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new postgresEntities object.
        /// </summary>
        public postgresEntities() : 
                base(@"metadata=res://*/Model.ACHIM.Model.csdl|res://*/Model.ACHIM.Model.ssdl|res://*/Model.ACHIM.Model.msl;provider=Npgsql;provider connection string=""Host=localhost;Username=postgres;Password=postgres;Database=postgres""", "postgresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new postgresEntities object using the connection string found in the 'postgresEntities' section of the application configuration file.
        /// </summary>
        public postgresEntities(string connectionString) : 
                base(connectionString, "postgresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new postgresEntities object.
        /// </summary>
        public postgresEntities(EntityConnection connection) : base(connection, "postgresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Plant> Plants
        {
            get
            {
                if ((_Plants == null))
                {
                    _Plants = base.CreateObjectSet<Plant>("Plants");
                }
                return _Plants;
            }
        }
        private ObjectSet<Plant> _Plants;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Measurement> Measurements
        {
            get
            {
                if ((_Measurements == null))
                {
                    _Measurements = base.CreateObjectSet<Measurement>("Measurements");
                }
                return _Measurements;
            }
        }
        private ObjectSet<Measurement> _Measurements;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Irrigation> Irrigations
        {
            get
            {
                if ((_Irrigations == null))
                {
                    _Irrigations = base.CreateObjectSet<Irrigation>("Irrigations");
                }
                return _Irrigations;
            }
        }
        private ObjectSet<Irrigation> _Irrigations;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PositionSwitch> PositionSwitches
        {
            get
            {
                if ((_PositionSwitches == null))
                {
                    _PositionSwitches = base.CreateObjectSet<PositionSwitch>("PositionSwitches");
                }
                return _PositionSwitches;
            }
        }
        private ObjectSet<PositionSwitch> _PositionSwitches;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pump> Pumps
        {
            get
            {
                if ((_Pumps == null))
                {
                    _Pumps = base.CreateObjectSet<Pump>("Pumps");
                }
                return _Pumps;
            }
        }
        private ObjectSet<Pump> _Pumps;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Plants EntitySet.
        /// </summary>
        public void AddToPlants(Plant plant)
        {
            base.AddObject("Plants", plant);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Measurements EntitySet.
        /// </summary>
        public void AddToMeasurements(Measurement measurement)
        {
            base.AddObject("Measurements", measurement);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Irrigations EntitySet.
        /// </summary>
        public void AddToIrrigations(Irrigation irrigation)
        {
            base.AddObject("Irrigations", irrigation);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PositionSwitches EntitySet.
        /// </summary>
        public void AddToPositionSwitches(PositionSwitch positionSwitch)
        {
            base.AddObject("PositionSwitches", positionSwitch);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Pumps EntitySet.
        /// </summary>
        public void AddToPumps(Pump pump)
        {
            base.AddObject("Pumps", pump);
        }

        #endregion
    }
}
